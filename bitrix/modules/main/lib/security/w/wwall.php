<? namespace Bitrix\Main\Security\W;$GLOBALS['____596492375']= array(base64_decode('d'.'GltZQ'.'=='),base64_decode(''.'dGl'.'tZQ=='),base64_decode('anN'.'vbl9kZWNvZG'.'U'.'='),base64_decode('YX'.'JyY'.'Xlf'.'bWVyZ2U='),base64_decode('a'.'m9pbg'.'=='),base64_decode('a'.'m9'.'pbg=='),base64_decode('a'.'m'.'9pbg=='),base64_decode('YXJyYX'.'lfcG9'.'w'),base64_decode(''.'Y'.'XJ'.'yYX'.'lfc2'.'hpZn'.'Q='),base64_decode('YXJyYXl'.'fc2h'.'pZnQ='),base64_decode('YXJyY'.'Xlfc2'.'hpZ'.'n'.'Q='),base64_decode('YX'.'JyYXlfc'.'2hp'.'ZnQ='),base64_decode('YXJyYXlfbWV'.'yZ2U='),base64_decode('aXNfYXJ'.'yYX'.'k='),base64_decode('YX'.'Jy'.'YXlfb'.'W'.'Vy'.'Z'.'2U='),base64_decode('aW5fY'.'XJ'.'yY'.'Xk='),base64_decode('aW5fY'.'X'.'Jy'.'YXk'.'='),base64_decode(''.'aW'.'5'.'fYXJ'.'yYXk='),base64_decode('aW5fYXJy'.'YXk='),base64_decode('aW5'.'fYXJy'.'Y'.'Xk='),base64_decode('dGltZQ=='),base64_decode('dG'.'l'.'t'.'ZQ=='),base64_decode(''.'YXJyYXlfbWFw'),base64_decode('anNvbl9lbmNvZGU='),base64_decode('a'.'nNv'.'bl9lbmNv'.'Z'.'G'.'U'.'='),base64_decode('am9p'.'b'.'g=='));if(!function_exists(__NAMESPACE__.'\\___1987797271')){function ___1987797271($_499291198){static $_2056652136= false; if($_2056652136 == false) $_2056652136=array('V1dBT'.'E'.'xf'.'TE9D'.'Sw='.'=',''.'c2VjdXJpdHk'.'=',''.'Y2'.'Fj'.'aG'.'U=',''.'dH'.'Rs','REFUQQ==','e'.'yI=','V'.'1dB'.'T'.'Ex'.'fTE9DSw==',''.'c'.'2Vjd'.'XJp'.'dHk'.'=','U0'.'VD'.'VV'.'JJVFlfV1dBTExf'.'RVh'.'DRV'.'BUSU9'.'O','RkFJTF9DS'.'E'.'VDS0lORw==','Q2FuIG5vd'.'C'.'BleGVjdXRl'.'IHd3YWxsIHJ'.'1'.'bG'.'Vz'.'OiA'.'=','IFRyYWNlOiA=',''.'UkVRV'.'UVT'.'V'.'F9VUkk=','a2'.'V5'.'cw'.'==','d'.'m'.'Fsd'.'WVz','U0VDVVJJV'.'FlfV'.'1dBTE'.'xfT'.'U9ESUZZ','Lg'.'='.'=','U0VDV'.'VJJV'.'Fl'.'fV1dBTExf'.'V'.'U'.'5'.'TR'.'VQ=','Lg==','U'.'0'.'V'.'DVV'.'JJ'.'VFlfV'.'1'.'dBTExfRVh'.'JV'.'A==','Lg==','Z'.'2xvYmFs',''.'a2V'.'5c'.'w==',''.'d'.'mFs'.'dW'.'Vz','Z'.'2V0',''.'Z2'.'V0','cG9'.'zdA==','cG'.'9'.'z'.'dA==','Y2'.'9va2l'.'l','Y29va2'.'l'.'l','cmVx'.'d'.'WVz'.'dA='.'=','cm'.'VxdW'.'VzdA='.'=',''.'Z2xvYm'.'Fs',''.'Z2xvYmFs',''.'b'.'W'.'Fpbl'.'9zZWM=','V1'.'dB'.'T'.'E'.'xfQUNUVUFMSVpF'.'X'.'1JVTE'.'VT','dg==','dmVyc2lvbg==','aQ==','aXNJ'.'bn'.'N0YWxsZWQ=',''.'c29ja'.'2V0'.'VGltZ'.'W91d'.'A='.'=','c3R'.'yZWFtVGltZW91'.'dA==','KCc=','ZGF0YQ==',''.'Jyw'.'g'.'Jw==',''.'bW9kdWxl','JywgJ'.'w==','bW9kdWxlX'.'3'.'ZlcnN'.'pb24=','Jyk'.'=','LCA=','U0'.'VDVV'.'JJ'.'VF'.'l'.'fV1'.'dB'.'TExfRVhD'.'R'.'VB'.'USU9'.'O','b'.'WFpbg==','RkF'.'JTF9'.'SR'.'UZ'.'SRVN'.'ISU5H','Q2Fu'.'I'.'G5vdCByZWZyZXNoIHd3YWxsIHJ1bGV'.'zO'.'iA=','IFRyYWNlOi'.'A=','ZGF0Y'.'Q='.'=','eyI=','L'.'S'.'0tLS1CR'.'Ud'.'JTi'.'BQVUJM'.'SUMgS0VZLS0tLS0=','Ck1JSU'.'JJak'.'F'.'O'.'Qm'.'drcWh'.'raUc5'.'dz'.'BCQVFFRkFBT0NBUTh'.'BT'.'U'.'l'.'JQkNn'.'S0NB'.'UUVBcT'.'hRRTBIam'.'1'.'IS'.'lVT'.'dFdWN'.'m4wemEKUlZv'.'T'.'Hgw'.'Mk'.'t6YmZyYlMv'.'UDZzV2F4'.'VH'.'p3OFNlR1R0YlRDT3J'.'wSGk1U'.'UY2T1J5alovWHh6L0tMV'.'TFH'.'Ym'.'9mOUNaMw'.'o0ejdT'.'a3FVd'.'DY2a'.'WJ'.'Ydk9GQ'.'n'.'g0Zncv'.'QV'.'BQU'.'kdEcXRtMG5EM2ZnR3N1M1J'.'lUGd3M'.'jl'.'pOCt2bTd'.'td'.'E'.'JLSlVZbDRyCl'.'Z'.'wYjZzZlpFVD'.'lLRW'.'I2VDF'.'I'.'RFltRXZjM'.'WhxL'.'2lpdX'.'l'.'4THJaW'.'mk1'.'UT'.'ZVZmY'.'0VUV2'.'VEk'.'rNjhzc0'.'ZSa1Er'.'b3dUUn'.'kKZU9JTWJ'.'GaE0vVVRtZlZZYlRS'.'Rnkyb1VR'.'OFdN'.'e'.'mEybk'.'o1'.'U2'.'FoemkxV'.'UtPMWpB'.'a'.'l'.'hUUFJyem'.'M3'.'QWp1Nj'.'M5ajFP'.'MApw'.'c'.'H'.'FmbTV4Z1dsR'.'kFKa0hRVGd'.'iZGQ'.'1Q'.'VdxREZRa3Q5SEtrWSt'.'UbmZCT'.'E'.'dWTXZWeV'.'B3VEhOV1FZQXc0eHB'.'nL3d'.'BC'.'l'.'p3S'.'URB'.'UU'.'FC'.'Ci0tLS0t'.'RU5EIFBVQkxJ'.'Q'.'y'.'BLRVktLS0tL'.'Q'.'='.'=');return base64_decode($_2056652136[$_499291198]);}}; use Bitrix\Main\Application; use Bitrix\Main\Config\Option; use Bitrix\Main\Data\Cache; use Bitrix\Main\ModuleManager; use Bitrix\Main\Security\PublicKeyCipher; use Bitrix\Main\SystemException; use Bitrix\Main\Web\HttpClient; use Bitrix\Main\Web\Json; use Bitrix\Main\Security\W\Rules\Rule; use Bitrix\Main\Security\W\Rules\Results\RuleAction; use Bitrix\Main\Security\W\Rules\Results\RuleResult; use Bitrix\Main\Security\W\Rules\Results\CheckResult; use Bitrix\Main\Security\W\Rules\Results\ModifyResult; use Bitrix\Main\Type\ArrayHelper; use Bitrix\Main\Security\W\Rules\RuleRecordTable; class WWall{ const CACHE_RULES_TTL= 10800; private static $_1701883306= 'https://wwall.bitrix.info/rules.php'; protected $_1897962662= true; public function handle(){ try{  $_1880580387= Cache::createInstance(); $_1367889502= false; if($_1880580387->initCache(static::CACHE_RULES_TTL, 'WWALL_LOCK', 'security')){ $_709442765= $_1880580387->getVars(); if($GLOBALS['____596492375'][0]()- $_709442765> round(0+10+10)){  $_787879537= Application::getConnection(); $_463540320= RuleRecordTable::getTableName(); $_787879537->truncateTable($_463540320); RuleRecordTable::cleanCache(); $_1880580387->clean(___1987797271(0), ___1987797271(1));}} elseif($_1880580387->startDataCache()){  $_1880580387->endDataCache($GLOBALS['____596492375'][1]()); $_1367889502= true;}  $_1938094830= RuleRecordTable::getList([ ___1987797271(2) =>[___1987797271(3) => round(0+900+900+900+900)* round(0+24)* round(0+1.75+1.75+1.75+1.75)]])->fetchAll(); foreach($_1938094830 as $_1836941555){ $_797176574= new PublicKeyCipher; $_2022918501= $_797176574->decrypt($_1836941555[___1987797271(4)], static::__1457866427()); if(!str_starts_with($_2022918501, ___1987797271(5))){ continue;} $_1377530293= $GLOBALS['____596492375'][2]($_2022918501, true); if(!empty($_1377530293)){ $_1521829324= Rule::make($_1377530293); $_1097181083= $this->handleRule($_1521829324); $this->applyHandlingResults($_1097181083);}}  if($_1367889502){ $_1880580387->clean(___1987797271(6), ___1987797271(7));}} catch(\Throwable $_247791378){ $this->logEvent( ___1987797271(8), ___1987797271(9), ___1987797271(10). $_247791378->getMessage(). ___1987797271(11). $_247791378->getTraceAsString());}}  public function handleRule(Rule $_1521829324): array{ $_1097181083=[]; if($_1521829324->matchPath($_SERVER[___1987797271(12)])){  $_1655522328= $this->getContextElements($_1521829324->getContext()); foreach($_1655522328 as $_1555811200 => &$_1297607926){ $_1097181083= $GLOBALS['____596492375'][3]($_1097181083, $this->recursiveContextKeyHandle($_1555811200, $_1297607926,[], $_1521829324));}} return $_1097181083;}  public function applyHandlingResults(array $_1097181083){ $_1655522328= $this->getContextElements([ 'get', 'post', 'cookie', 'request', 'global']); foreach($_1097181083 as $_564828840){ $_1297607926=& $_1655522328[$_564828840->getContextName()]; $_654703961= $_564828840->getRuleResult(); $_1521829324= $_564828840->getRule(); if($_654703961 instanceof ModifyResult){ if($_1521829324->getProcess() === ___1987797271(13)){  static::rewriteContextKey( $_564828840->getContextName(), $_1297607926, $_564828840->getContextKey(), $_654703961->getCleanValue());} elseif($_1521829324->getProcess() === ___1987797271(14)){ static::rewriteContextValue( $_564828840->getContextName(), $_1297607926, $_564828840->getContextKey(), $_654703961->getCleanValue());} $this->logEvent( ___1987797271(15), $_564828840->getContextName(), $GLOBALS['____596492375'][4](___1987797271(16), $_564828840->getContextKey()));} elseif($_654703961 instanceof CheckResult &&!$_654703961->isSuccess()){ if($_654703961->getAction() === RuleAction::UNSET){ static::unsetContextValue( $_564828840->getContextName(), $_1297607926, $_564828840->getContextKey(),); $this->logEvent( ___1987797271(17), $_564828840->getContextName(), $GLOBALS['____596492375'][5](___1987797271(18), $_564828840->getContextKey()));} elseif($_654703961->getAction() === RuleAction::EXIT){ $this->logEvent( ___1987797271(19), $_564828840->getContextName(), $GLOBALS['____596492375'][6](___1987797271(20), $_564828840->getContextKey())); exit;}}}} public function disableEventLogging(){ $this->_1897962662= false;} protected function rewriteContextKey($_1555811200, &$_1297607926, $_72357866, $_1721076976){ $_96315118= $_72357866;  $GLOBALS['____596492375'][7]($_96315118); $_96315118[]= $_1721076976; if($_1555811200 === ___1987797271(21)){ $_1036291602= $GLOBALS['____596492375'][8]($_72357866); $GLOBALS['____596492375'][9]($_96315118); if(empty($_72357866)){ $GLOBALS[$_1721076976]= $GLOBALS[$_1036291602]; unset($GLOBALS[$_1036291602]);} else{ $_1297607926=& $GLOBALS[$_1036291602]; $_666691013= ArrayHelper::getByNestedKey($_1297607926, $_72357866);  ArrayHelper::setByNestedKey($_1297607926, $_96315118, $_666691013);  ArrayHelper::unsetByNestedKey($_1297607926, $_72357866);}} else{ $_666691013= ArrayHelper::getByNestedKey($_1297607926, $_72357866);  ArrayHelper::setByNestedKey($_1297607926, $_96315118, $_666691013);  ArrayHelper::unsetByNestedKey($_1297607926, $_72357866);}} protected function rewriteContextValue($_1555811200, &$_1297607926, $_508020015, $_666691013){ if($_1555811200 === 'global'){ $_1036291602= $GLOBALS['____596492375'][10]($_508020015); if(empty($_508020015)){ $GLOBALS[$_1036291602]= $_666691013;} else{ $_1297607926=& $GLOBALS[$_1036291602]; ArrayHelper::setByNestedKey($_1297607926, $_508020015, $_666691013);}} else{  ArrayHelper::setByNestedKey($_1297607926, $_508020015, $_666691013);}} protected function unsetContextValue($_1555811200, &$_1297607926, $_508020015){ if($_1555811200 === 'global'){ $_1036291602= $GLOBALS['____596492375'][11]($_508020015); if(empty($_508020015)){ unset($GLOBALS[$_1036291602]);} else{ $_1297607926=& $GLOBALS[$_1036291602]; ArrayHelper::unsetByNestedKey($_1297607926, $_508020015);}} else{ ArrayHelper::unsetByNestedKey($_1297607926, $_508020015);}}  protected function recursiveContextKeyHandle(string $_1555811200, array &$_1297607926, array $_1465673569, Rule $_1521829324): array{  $_1097181083=[]; foreach($_1297607926 as $_492185989 => $_666691013){ $_508020015= $GLOBALS['____596492375'][12]($_1465673569,[$_492185989]); if($_1521829324->matchKey($_508020015)){  if($_1521829324->getProcess() === ___1987797271(22)){ $_654703961= $_1521829324->evaluate($_492185989);} elseif($_1521829324->getProcess() === ___1987797271(23)){ $_654703961= $_1521829324->evaluateValue($_666691013);}  if(!empty($_654703961) && $_654703961 instanceof RuleResult){ $_1097181083[]= new HandlingResult($_1555811200, $_508020015, $_654703961, $_1521829324);}}  if($GLOBALS['____596492375'][13]($_666691013)){ $_1097181083= $GLOBALS['____596492375'][14]($_1097181083, $this->recursiveContextKeyHandle( $_1555811200, $_1297607926[$_492185989], $_508020015, $_1521829324));}} return $_1097181083;} protected function getContextElements(array $_987251389){ $_1012345384=[]; if($GLOBALS['____596492375'][15](___1987797271(24), $_987251389, true)){ $_1012345384[___1987797271(25)]= &$_GET;} if($GLOBALS['____596492375'][16](___1987797271(26), $_987251389, true)){ $_1012345384[___1987797271(27)]= &$_POST;} if($GLOBALS['____596492375'][17](___1987797271(28), $_987251389, true)){ $_1012345384[___1987797271(29)]= &$_COOKIE;} if($GLOBALS['____596492375'][18](___1987797271(30), $_987251389, true)){ $_1012345384[___1987797271(31)]= &$_REQUEST;} if($GLOBALS['____596492375'][19](___1987797271(32), $_987251389, true)){ $_1012345384[___1987797271(33)]= $GLOBALS;} return $_1012345384;} public static function refreshRules(){ try{ $_1858016607= Option::get('main_sec', 'WWALL_ACTUALIZE_RULES', 0); if(($GLOBALS['____596492375'][20]()- $_1858016607)< static::CACHE_RULES_TTL){ return;} Option::set(___1987797271(34), ___1987797271(35), $GLOBALS['____596492375'][21]()); $_1975674203= null;  $_75023052= $GLOBALS['____596492375'][22](function($_147219536){ return[___1987797271(36) => $_147219536[___1987797271(37)], ___1987797271(38) => (int) $_147219536[___1987797271(39)]];}, ModuleManager::getModulesFromDisk());  $_330440988= new HttpClient([ ___1987797271(40) => round(0+1.25+1.25+1.25+1.25), ___1987797271(41) => round(0+5)]); $_1306936593= $_330440988->post( static::$_1701883306,[ 'modules' => $GLOBALS['____596492375'][23]($_75023052), 'license' => Application::getInstance()->getLicense()->getHashLicenseKey()]); if($_330440988->getStatus() == round(0+100+100) &&!empty($_1306936593)){ $_1975674203= Json::decode($_1306936593);}  if($_1975674203 !== null){ $_787879537= Application::getConnection(); $_463540320= RuleRecordTable::getTableName(); if(!empty($_1975674203)){ foreach($_1975674203 as $_1558500507){ if(!static::checkRuleSign($_1558500507)){ throw new SystemException('Invalid sign for rule '.$GLOBALS['____596492375'][24]($_1558500507));}}}  $_787879537->truncateTable($_463540320);  if(!empty($_1975674203)){ $_1156692526=[]; foreach($_1975674203 as $_1558500507){ $_1156692526[]= ___1987797271(42). $_787879537->getSqlHelper()->forSql($_1558500507[___1987797271(43)]). ___1987797271(44). $_787879537->getSqlHelper()->forSql($_1558500507[___1987797271(45)]). ___1987797271(46). $_787879537->getSqlHelper()->forSql($_1558500507[___1987797271(47)]). ___1987797271(48);} $_510095218= $GLOBALS['____596492375'][25](___1987797271(49), $_1156692526);  $_787879537->query("INSERT INTO {$_463540320} (DATA, MODULE, MODULE_VERSION) VALUES {$_510095218}");  RuleRecordTable::cleanCache();}}} catch(\Throwable $_247791378){ \CEventLog::log( \CEventLog::SEVERITY_SECURITY, ___1987797271(50), ___1987797271(51), ___1987797271(52), ___1987797271(53). $_247791378->getMessage(). ___1987797271(54). $_247791378->getTraceAsString());}} protected static function checkRuleSign($_1521829324){ $_797176574= new PublicKeyCipher; $_1377530293= $_797176574->decrypt($_1521829324[___1987797271(55)], static::__1457866427()); return str_starts_with($_1377530293, ___1987797271(56));} private static function __1457866427(){ $_734202353= ''; $_734202353 .= ___1987797271(57); $_734202353 .= ___1987797271(58); return $_734202353;} protected function logEvent($_1646462123, $_1936961941, $_1025617317){ if($this->_1897962662){ \CEventLog::log( \CEventLog::SEVERITY_SECURITY, $_1646462123, 'main', $_1936961941, $_1025617317);}}}?>